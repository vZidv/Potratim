@model Potratim.ViewModel.OrderViewModel

<div class="order-summary">
    <h2 class="text-center text-white mb-4">Оформление заказа</h2>
    <div class="order-summary-details mb-4">
        <div class="contact-info">
            <div class="header">
                <div class="number-move">
                    <p>1</p>
                </div>
                <h3>Ваш адрес электронной почты</h3>
            </div>
            <input id="email-input" name="Email" value="@(Model.Email != null ? @Model.Email : "")" type="email"
                class="form-control" placeholder="Введите ваш email" required>
        </div>
        <div class="order-items mt-4">
            <div class="header">
                <div class="number-move">
                    <p>2</p>
                </div>
                <h3>Ваша корзина</h3>
            </div>
            @foreach (Game item in Model.Cart.Items)
            {
                <div class="order-item">
                    <img src="@(item.ImageUrl)" alt="@(item.Title)" />
                    <div class="item-details">
                        <h4 class="item-name" style="font-size: 1.9rem; font-weight: bold;">@(item.Title)</h4>
                    </div>
                    <div class="item-price">
                        <p>@((int)item.Price) ₽</p>
                    </div>
                    <div class="item-remove">
                        <a asp-action="RemoveFromCart" asp-controller="Cart" asp-route-gameId="@item.Id"
                            class="btn btn-link btn-remove"><i class="fa fa-times-circle"></i></a>
                    </div>
                </div>
            }
            <div class="order-total">
                <div class="order-summary-total">
                    <h4 class="text-white">Количество:</h4>
                    <p class="text-white">@Model.Cart.Items.Count</p>
                </div>
                <div class="order-summary-total">
                    <h4 class="text-white">Итого:</h4>
                    <p style="color: #17f962; font-weight: bold;">@((int)Model.Cart.TotalPrice) ₽</p>
                </div>
            </div>
        </div>
        <div class="order-payment-way mt-4">
            <div class="header">
                <div class="number-move">
                    <p>3</p>
                </div>
                <h3>Способ оплаты</h3>
            </div>
            <div class="payment-methods">
                <div class="payment-method">
                    <input type="radio" id="visa-radio" name="paymentMethod" value="false"
                        class="custom-radio-unvisited" />
                    <label for="visa-radio" class="custom-radio-pay text-white">
                        <div class="payment-method-details">
                            <i class="fa fa-cc-visa" aria-hidden="true"></i>
                            <p>Карта</p>
                        </div>
                    </label>
                </div>
                <div class="payment-method">
                    <input type="radio" id="paypal-radio" name="paymentMethod" value="paypal"
                        class="custom-radio-unvisited" />
                    <label for="paypal-radio" class="custom-radio-pay text-white">
                        <div class="payment-method-details">
                            <i class="fa fa-cc-paypal" aria-hidden="true"></i>
                            <p>PayPal</p>
                        </div>
                    </label>
                </div>
                <div class="payment-method">
                    <input type="radio" id="mastercard-radio" name="paymentMethod" value="mastercard"
                        class="custom-radio-unvisited" />
                    <label for="mastercard-radio" class="custom-radio-pay text-white">
                        <div class="payment-method-details">
                            <i class="fa fa-cc-mastercard" aria-hidden="true"></i>
                            <p>MasterCard</p>
                        </div>
                    </label>
                </div>
                <div class="payment-method">
                    <input type="radio" id="qiwi-radio" name="paymentMethod" value="qiwi"
                        class="custom-radio-unvisited" />
                    <label for="qiwi-radio" class="custom-radio-pay text-white">
                        <div class="payment-method-details">
                            <i class="fa fa-rub" aria-hidden="true"></i>
                            <p>Qiwi</p>
                        </div>
                    </label>
                </div>
                <div class="payment-method">
                    <input type="radio" id="mir-radio" name="paymentMethod" value="mir"
                        class="custom-radio-unvisited" />
                    <label for="mir-radio" class="custom-radio-pay text-white">
                        <div class="payment-method-details">
                            <i class="fa fa-credit-card" aria-hidden="true"></i>
                            <p>Карта МИР</p>
                        </div>
                    </label>
                </div>
            </div>
        </div>
        <div class="order-finish mt-4">
            <div id="agreements-list" class="agreements">
                <input id="agreement-checkbox" type="checkbox"
                    style="align-self: flex-start; margin-right: 10px; margin-top: 10px;" />
                <label for="agreement-checkbox" class="text-white">
                    Я подтверждаю, что ознакомлен с условиями использования данного демонстрационного сайта.
                    Мне известно, что приобретение игр на данном ресурсе не является реальной покупкой и носит
                    исключительно ознакомительный характер. Данный проект разработан пользователем <a
                        href="https://github.com/vZidv">vZidv</a> в рамках
                    учебного (pet-project) и размещен на платформе GitHub (репозиторий <a
                        href="https://github.com/vZidv/Potratim">Potratim</a>).</label>
            </div>
            <div style="text-align: right;">
                <form method="post" asp-action="OrderFinished">
                    <input type="hidden" name="totalCost" value="@((int)Model.Cart.TotalPrice)" />
                    <button type="submit" id="order-confirm-button" class="btn order-button-confirm"
                        style="font-size: 1.3rem; width: 20%; margin-top: 10px;">Оплатить заказ</button>
                </form>
            </div>
        </div>
    </div>
    <div class="game-similar">
        <div class="swiper-container">
            <h2 class="section-title text-white">Вас также может заинтересовать</h2>
            <hr class="bg-white line-home">

            <div class="swiper game-new-swiper">
                <div class="swiper-wrapper">
                    @if (Model.SameGames != null && Model.SameGames.Any())
                    {
                        @foreach (var game in Model.SameGames)
                        {
                            <div class="swiper-slide">
                                <a class="btn" asp-controller="Game" asp-action="Index" asp-route-id="@game.Id">
                                    <div class="game-card">
                                        <img src="@game.ImageUrl" alt="@game.Title" class="game-card-image">
                                        <h3 class="game-card-title text-center">@game.Title</h3>
                                    </div>
                                </a>
                            </div>
                        }
                    }
                </div>
                <div class="swiper-button-next"></div>
                <div class="swiper-button-prev"></div>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const emailInput = document.getElementById("email-input");
            const paymentMethods = document.querySelectorAll("input[name='paymentMethod']");

            const agreementDiv = document.getElementById("agreements-list");
            const agreementCheckbox = document.getElementById("agreement-checkbox");

            const confirmButton = document.getElementById("order-confirm-button");

            function showError(message) {
                alert(message);
            }

            function hideError() {
                emailInput.classList.remove("email-error");
                agreementDiv.classList.remove("email-agreement");
            }

            function validateForm() {
                hideError();

                const emailValue = emailInput.value.trim();
                if (!emailValue) {
                    showError("Пожалуйста, введите ваш email.");
                    emailInput.classList.add("email-error");
                    emailInput.focus();
                    return false;
                }

                const orderItems = document.querySelectorAll(".order-item");
                if (orderItems.length === 0) {
                    showError("Корзина пуста. Пожалуйста, добавьте товары в корзину.");
                    return false;
                }

                let isPaymentMethodSelected = false;
                paymentMethods.forEach(method => {
                    if (method.checked) {
                        isPaymentMethodSelected = true;
                    }
                });

                if (!isPaymentMethodSelected) {
                    showError('Пожалуйста, выберите способ оплаты.');
                    return false;
                }

                if (!agreementCheckbox.checked) {
                    showError('Вы должны согласиться с условиями использования сайта.');
                    agreementDiv.classList.add("email-agreement");
                    return false;
                }

                return true;
            }

            confirmButton.addEventListener("click", function (event) {
                if (!validateForm())
                    event.preventDefault();

            });
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const swiper = new Swiper('.game-new-swiper', {
                loop: true,
                slidesPerView: 1,
                spaceBetween: 10,
                navigation: {
                    nextEl: '.swiper-button-next',
                    prevEl: '.swiper-button-prev',
                },
                breakpoints: {
                    640: { slidesPerView: 2, spaceBetween: 20 },
                    768: { slidesPerView: 3, spaceBetween: 30 },
                    1024: { slidesPerView: 4, spaceBetween: 40 },
                },
                autoplay: {
                    delay: 3000,
                    disableOnInteraction: false,
                    pauseOnMouseEnter: true
                }
            });
        });
    </script>
}