@using Potratim.ViewModel
@model Potratim.ViewModel.UsersIndexViewModel

<h1 class="text-white text-center mt-4">Управление пользователями</h1>

<div class="users-container mt-4">
    <div>
        <a asp-area="Admin" asp-controller="Panel" asp-action="Index" class="btn btn-secondary mb-3">Назад к панели</a>
    </div>
    <div class="users-header">
        <div class="users-stats-list">
            <div>
                <h1>@Model.AllUsersCount</h1>
                <p>Всего пользователей</p>
            </div>
            <div>
                <h1>@Model.ClientsCount</h1>
                <p>Всего клиентов</p>
            </div>
            <div>
                <h1>@Model.ModeratorsCount</h1>
                <p>Модераторов</p>
            </div>
            <div>
                <h1>@Model.AdminsCount</h1>
                <p>Администраторов</p>
            </div>
        </div>
    </div>

    <div class="users-filters">
        <form asp-action="Index" method="get" id="filterForm">
            <div class="users-filters-1 mb-2">
                <div class="users-input-group">
                    <sub>Поиск пользователей</sub>
                    <input type="text" class="form-control users-input-search" value="@Model.SearchTerm"
                        placeholder="Введите ник, email или ID пользователя..." name="searchString" />
                </div>
                <div class="users-input-group">
                    <sub>Роль</sub>
                    <select class="form-select" name="roleSelect">
                        <option value="">Все роли</option>
                        @foreach (string role in Model.Roles)
                        {
                            <option value="@role" selected=@(Model.RoleFilter == role ? "selected" : null)>@role</option>
                        }
                    </select>
                </div>
                <div class="users-input-group ">
                    <sub>Статус</sub>
                    <select class="form-select" name="status">
                        <option value="">Все статусы</option>
                        <option value="active">Активный</option>
                        <option value="inactive">Заблокированный</option>
                    </select>
                </div>
            </div>
            <div class="users-filters-2">
                <div class="users-input-group-date">
                    <div class="users-input-group">
                        <sub>Дата регистрации от</sub>
                        <input type="date" class="form-control" name="dateFrom" id="dateFrom" value="@(Model.RegistrationDateFrom?.ToString("yyyy-MM-dd"))" />
                    </div>
                    <div class="users-input-group">
                        <sub>до</sub>
                        <input type="date" class="form-control" name="dateTo" id="dateTo" value="@(Model.RegistrationDateTo?.ToString("yyyy-MM-dd"))" />
                    </div>
                </div>
                <div class="users-input-group-buttons">
                    <button type="submit" class="btn-filter btn btn-primary"><i class="fa fa-filter"></i>Применить
                        фильтры</button>
                    <a asp-action="Index" 
                    class="btn-filter btn btn-secondary"><i class="fa fa-repeat"
                            aria-hidden="true"></i>Сбросить фильтры</a>
                </div>
            </div>
        </form>
    </div>

    <div class="users-list">
        <table class="users-list-table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Ник</th>
                    <th>Email</th>
                    <th>Роль</th>
                    <th>Статус</th>
                    <th>Дата регистрации</th>
                    <th>Действия</th>
                </tr>
            </thead>
            <tbody>
                @foreach (UserViewModel user in Model.Users)
                {
                    <tr>
                        <td style="width: 180px;">@user.Id</td>
                        <td>@user.Nickname</td>
                        <td>@user.Email</td>
                        <td>
                            <div class="user-role" style="background: #@user.RoleColor;">
                                @user.RoleName
                            </div>
                        </td>
                        <td>
                            <div class="user-status" style="background: #2ba576;">
                                @user.Status
                            </div>
                        </td>
                        <td>@user.RegistrationDate.ToShortDateString()</td>
                        <td class="users-list-table-btn">
                            <a href="@Url.Action("Edit", "Users", new { id = user.Id })"
                                class="table-btn btn btn-sm btn-info"><i class="fa fa-pencil" aria-hidden="true"></i></a>
                            @if (user.RoleName != "Admin")
                            {
                                <a href="@Url.Action("Delete", "Users", new { id = user.Id })"
                                    class="table-btn btn btn-sm btn-danger"><i class="fa fa-trash" aria-hidden="true"></i></a>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>


@section Scripts {
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("filterForm");
        const dateFromInput = document.getElementById("dateFrom");
        const dateToInput = document.getElementById("dateTo");

        function validateDates() {
            const fromVal = dateFromInput.value;
            const toVal = dateToInput.value;

            dateFromInput.classList.remove("date-error");
            dateToInput.classList.remove("date-error");

            
            if ((fromVal && !toVal) || (!fromVal && toVal)) {
                if (fromVal) {
                    dateToInput.classList.add("date-error");
                } else {
                    dateFromInput.classList.add("date-error");
                }
                return false; 
            }
            return true; 
        }

        if (dateFromInput && dateToInput) {
            dateFromInput.addEventListener('input', validateDates);
            dateToInput.addEventListener('input', validateDates);

            
            if (form) {
                form.addEventListener('submit', function (e) {
                    if (!validateDates()) {
                        e.preventDefault(); 
                        alert('Пожалуйста, заполните оба поля даты или оставьте их пустыми.');
                    }
                });
            }

            validateDates();
        }
    }); 
</script>
}